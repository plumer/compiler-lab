#ifndef __COMMON_H__
#define __COMMON_H__

#include "symbol.h"

extern int error;
extern int semerror;
extern int lineno;
extern struct tree_node * root;


void reseterror();
void resetlineno();
void lexerror(const char *fmt, ...);
void synerror(const char *fmt, ...);
void semerrorpos(int type, int line);

typedef unsigned short unit_t;

const char * unit_to_string (unit_t u); 


enum {
	TOKEN_ERROR,
	// 1
	TOKEN_INTEGER,		TOKEN_FLOAT,		TOKEN_IDENTIFIER,
	TOKEN_SEMICOLON,	TOKEN_COMMA,		TOKEN_ASSIGNOP,
	TOKEN_RELOP,		TOKEN_PLUS,			TOKEN_MINUS,
	TOKEN_STAR,			TOKEN_DIV,			TOKEN_AND,
	TOKEN_OR,			TOKEN_DOT,			TOKEN_NOT,
	TOKEN_TYPE,			TOKEN_PAREN,		TOKEN_BRACKET,
	TOKEN_CURLYBRACE,	TOKEN_STRUCT,		TOKEN_RETURN,
	TOKEN_IF,			TOKEN_ELSE,			TOKEN_WHILE,
	// 25	
	TOKEN_UNDEF,
	// 26
	NODE_PROGRAM,		
	NODE_EXTDEFLIST,	NODE_EXTDEF,		NODE_EXTDECLIST,
	NODE_SPECIFIER,		NODE_STRUCTSPECIFIER, NODE_OPTTAG,
	NODE_TAG,
	NODE_VARDEC,		NODE_FUNDEC,		NODE_VARLIST,
	NODE_PARAMDEC,
	// 38
	NODE_COMPST,		NODE_STMTLIST,		NODE_STMT,
	NODE_DEFLIST,		NODE_DEF,			NODE_DECLIST,
	NODE_DEC,
	NODE_EXP,			NODE_ARGS,
	NODE_LIST_END
};



enum {
	FLAG_ERROR,
	// 1
	FLAG_RELOP_GT,		FLAG_RELOP_GE,		FLAG_RELOP_EQ,
	FLAG_RELOP_LT,		FLAG_RELOP_LE,		FLAG_RELOP_NE,
	FLAG_TYPE_INT,		FLAG_TYPE_FLOAT,
	// 9
	FLAG_EXTDEFLIST_MORE,	FLAG_EXTDEFLIST_EMPTY,
	FLAG_EXTDEF_VARIABLES,	FLAG_EXTDEF_TYPE,	FLAG_EXTDEF_FUNCTION,
	FLAG_EXTDECLIST_SINGLE,	FLAG_EXTDECLIST_MORE,
	FLAG_SPECIFIER_BASIC,	FLAG_SPECIFIER_STRUCT,
	FLAG_STRUCTSPECIFIER_DEF,FLAG_STRUCTSPECIFIER_DEC,
	FLAG_OPTTAG_TAGGED,		FLAG_OPTTAG_EMPTY,
	// 22
	FLAG_VARDEC_ARRAY,		FLAG_VARDEC_SINGLE,
	FLAG_FUNDEC_WITHARGS,	FLAG_FUNDEC_NOARGS,
	FLAG_VARLIST_MORE,		FLAG_VARLIST_SINGLE,
	// 28
	FLAG_STMTLIST_MORE,		FLAG_STMTLIST_EMPTY,
	FLAG_STMT_EXP,			FLAG_STMT_COMPST,	FLAG_STMT_RETURN,
	FLAG_STMT_IF,			FLAG_STMT_IFELSE,	FLAG_STMT_WHILE,
	// 36
	FLAG_DEFLIST_MORE,		FLAG_DEFLIST_EMPTY,
	FLAG_DECLIST_MORE,		FLAG_DECLIST_SINGLE,
	FLAG_DEC_NORMAL,		FLAG_DEC_INITIALIZED,
	// 42
	FLAG_EXP_ASSIGN,		FLAG_EXP_BINOP,		FLAG_EXP_PAREN,	FLAG_EXP_UNOP, 
	FLAG_EXP_CALL_ARGS,		FLAG_EXP_CALL_NOARGS,
	FLAG_EXP_SUBSCRIPT,		FLAG_EXP_MEMBER,	FLAG_EXP_ID,	FLAG_EXP_INT,	FLAG_EXP_FLOAT,
	// 53
	FLAG_ARGS_MORE,			FLAG_ARGS_SINGLE
};

enum {
	PBC_ERROR,
	PBC_LEFT,		PBC_RIGHT
};

enum {
	RELOP_ERROR,
	RELOP_GT,		RELOP_GE,		RELOP_EQ,
	RELOP_LT,		RELOP_LE,		RELOP_NE
};

enum {
	TYPE_ERROR,
	TYPE_INT,		TYPE_FLOAT,
	TYPE_BASIC,		TYPE_ARRAY,		TYPE_STRUCT
};



enum {
	COMPARE_GOOD,
	COMPARE_FLAG_MISMATCH,
	COMPARE_BASIC_TYPE_MISMATCH,
	COMPARE_ARRAY_DIMENSION_MISMATCH,
	COMPARE_STRUCT_MISMATCH,
	COMPARE_UNKNOWN
};

enum {
	ERROR_OTHER,
	ERROR_VARIABLE_UNDEFINED,
	ERROR_FUNCTION_UNDEFINED,
	ERROR_VARIABLE_CONFLICT,
	ERROR_FUNCTION_CONFLICT,
	ERROR_ASSIGN_MISMATCH,
	ERROR_ASSIGN_NONLEFT,
	ERROR_OPERAND_MISMATCH,
	ERROR_RETURN_MISMATCH,
	ERROR_PARAM_MISMATCH,
	ERROR_ARRAY_MISUSE,
	ERROR_FUNCTION_MISUSE,
	ERROR_SUBSCRIPT_NONINT,
	ERROR_STRUCT_MISUSE,
	ERROR_STRUCT_MEMBER_NOTFOUND,
	ERROR_STRUCT_MEMBER_CONFLICT,
	ERROR_STRUCT_NAME_CONFLICT,
	ERROR_STRUCT_UNDEFINED,
};



#define panic() printf("panic: %s, %s, %d\n", __FILE__, __FUNCTION__, __LINE__)


#endif // __COMMON_H__


